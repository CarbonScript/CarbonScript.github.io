"use strict";(self.webpackChunkdocs_carbonscript=self.webpackChunkdocs_carbonscript||[]).push([[7406],{3905:(t,e,n)=>{n.d(e,{Zo:()=>l,kt:()=>m});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},l=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,p=t.parentName,l=u(t,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(f,i(i({ref:e},l),{},{components:n})):r.createElement(f,i({ref:e},l))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=d;var u={};for(var p in e)hasOwnProperty.call(e,p)&&(u[p]=e[p]);u.originalType=t,u.mdxType="string"==typeof t?t:o,i[1]=u;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2160:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={},i=void 0,u={unversionedId:"Input and Output/Console IO",id:"Input and Output/Console IO",title:"Console IO",description:"read(void):string",source:"@site/docs/Input and Output/Console IO.md",sourceDirName:"Input and Output",slug:"/Input and Output/Console IO",permalink:"/docs/Input and Output/Console IO",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Student Management",permalink:"/docs/Example Programs/Student Management"},next:{title:"File IO",permalink:"/docs/Input and Output/File IO"}},p={},s=[{value:"read(void):string",id:"readvoidstring",level:2},{value:"print(param:string):void",id:"printparamstringvoid",level:2}],l={toc:s};function c(t){let{components:e,...n}=t;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"readvoidstring"},"read(void):string"),(0,o.kt)("p",null,"Carbon Script provides a built-in function read(), which acts as a reader in the standard input and output streams and can accept data input from the standard input stream."),(0,o.kt)("p",null,"This function receives a string from the console. This function takes a newline as the input terminator. So it cannot accept strings with newlines."),(0,o.kt)("p",null,"For example, in the example below, the input is accepted and stored in a variable."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"set your_name : string;\nyour_name = read();\n")),(0,o.kt)("p",null,"If you want to accept numbers, you need to convert first, convert the string to number."),(0,o.kt)("h2",{id:"printparamstringvoid"},"print(param:string):void"),(0,o.kt)("p",null,"This function outputs a string to the standard output stream. The function parameter is the string to output."),(0,o.kt)("p",null,"But the output will not wrap. So you need to add a ",(0,o.kt)("inlineCode",{parentName:"p"},"\\n")," by yourself when outputting a multiple-line string."),(0,o.kt)("p",null,"Also, this function can only accept strings as output. If you want to output numbers, booleans, you should convert them by explicitly converting them to strings."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'set a1,a2 : number = 8,9;\nprint("The sum is:");\nprint(strToNum(a1 + a2));\n')))}c.isMDXComponent=!0}}]);