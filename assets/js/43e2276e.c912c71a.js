"use strict";(self.webpackChunkdocs_carbonscript=self.webpackChunkdocs_carbonscript||[]).push([[9940],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3974:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const o={},i=void 0,l={unversionedId:"Basics/Function",id:"Basics/Function",title:"Function",description:"The Declaration",source:"@site/docs/Basics/Function.md",sourceDirName:"Basics",slug:"/Basics/Function",permalink:"/docs/Basics/Function",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Control Flow",permalink:"/docs/Basics/Control Flow"},next:{title:"Modules",permalink:"/docs/Basics/Modules"}},u={},c=[{value:"The Declaration",id:"the-declaration",level:2},{value:"Function calls",id:"function-calls",level:2},{value:"Function Overloading",id:"function-overloading",level:2}],s={toc:c};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"the-declaration"},"The Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<Function Name> (<Parameter List>) : <Return Type> {\n    <Function Body>\n}\n")),(0,a.kt)("p",null,"And the ",(0,a.kt)("inlineCode",{parentName:"p"},"<Parameter List>")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"para1:type1, para2:type2...")),(0,a.kt)("p",null,"For example, the summary calculator function may be "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sum (a:number,b:number):number{\n    return a + b;\n};\n")),(0,a.kt)("p",null,"If the function does not return anything, The return type should be ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"print_number (num:number):void{\n    # function body\n}\n")),(0,a.kt)("p",null,"Also, function has none parameter list, the parameter list should be empty."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"print_menu ():void{\n    # function body\n}\n")),(0,a.kt)("h2",{id:"function-calls"},"Function calls"),(0,a.kt)("p",null,"Functions can be called by their name and passed in parameters."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<function name>(<params>);\n")),(0,a.kt)("p",null,"For example,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sum(a:number, b:number):number{\n    return a + b;\n}\n\nset result : number = sum(4,5); \n")),(0,a.kt)("p",null,"The example program calls the sum function and uses a variable to receive the return value of the function."),(0,a.kt)("p",null,"The function call itself is very simple. But there are still some caveats."),(0,a.kt)("p",null,"First, don't call functions in a loop. For example, in the following example, ",(0,a.kt)("inlineCode",{parentName:"p"},"f1")," calls ",(0,a.kt)("inlineCode",{parentName:"p"},"f2"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"f2")," also calls ",(0,a.kt)("inlineCode",{parentName:"p"},"f1"),", which will cause the program execution stack to explode."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"f1():void{\n    f2();\n}\n\nf2():void{\n    f1();\n}\n\n# The heap-stack in memory will explode!\n")),(0,a.kt)("p",null,"Similarly, you should be careful when using recursion, and set a stop condition for recursion to prevent stack explosion."),(0,a.kt)("h2",{id:"function-overloading"},"Function Overloading"),(0,a.kt)("p",null,"If there are multiple functions with the same name, but they all have different parameter lists, then the usage is called function overloading."),(0,a.kt)("p",null,"For example, we define a function called ",(0,a.kt)("inlineCode",{parentName:"p"},"sum"),", For the sum of two strings, the value is the concatenation of the two strings. Arithmetic sum if it is the sum of two numbers."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sum(str1:string, str2:string):string{\n    return str1.concat(str2);\n}\n\nsum(num1:number, num2:number):number{\n    return num1 + num2;\n}\n\nsum('a', 'b');    # return 'ab'\nsum(1, 2);        # return 3\n")))}p.isMDXComponent=!0}}]);