"use strict";(self.webpackChunkdocs_carbonscript=self.webpackChunkdocs_carbonscript||[]).push([[9784],{3905:(e,t,o)=>{o.d(t,{Zo:()=>l,kt:()=>m});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(o),m=n,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return o?r.createElement(h,a(a({ref:t},l),{},{components:o})):r.createElement(h,a({ref:t},l))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var p=2;p<i;p++)a[p]=o[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},8477:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=o(7462),n=(o(7294),o(3905));const i={},a=void 0,c={unversionedId:"Contribution",id:"Contribution",title:"Contribution",description:"Github Contributions",source:"@site/docs/Contribution.md",sourceDirName:".",slug:"/Contribution",permalink:"/docs/Contribution",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Breakpoint",permalink:"/docs/Debug and build/Breakpoint"},next:{title:"Binary Search",permalink:"/docs/Example Programs/Binary Search"}},s={},p=[{value:"Github Contributions",id:"github-contributions",level:2},{value:"Contact Me",id:"contact-me",level:2},{value:"Repositories",id:"repositories",level:2},{value:"vscode-language-support",id:"vscode-language-support",level:3},{value:"docs-carbonscript",id:"docs-carbonscript",level:3},{value:"complier",id:"complier",level:3},{value:"target-minimizer",id:"target-minimizer",level:3},{value:"carbland",id:"carbland",level:3}],l={toc:p};function u(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"github-contributions"},"Github Contributions"),(0,n.kt)("p",null,"In order to complete this project, we need some ideas, inspiration, and vibrant contributors. Therefore, we sincerely look forward to more developers to join our project, cooperate together, and complete this project with higher efficiency."),(0,n.kt)("p",null,"There are some repositories in this project, They all correspond to different sub -tasks in this project."),(0,n.kt)("p",null,"They will give their URL addresses and give you an introduction."),(0,n.kt)("h2",{id:"contact-me"},"Contact Me"),(0,n.kt)("p",null,"This is ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/PrinOrange"},"my github"),", and my E-mail address is ",(0,n.kt)("a",{parentName:"p",href:"mailto:prinorange@qq.com."},"prinorange@qq.com.")," In China, you can add my wechat or qq group. ",(0,n.kt)("a",{parentName:"p",href:"http://blog.dragonbook.cn"},"Please see my personal website for details"),". Sure, you can follow my twitter ",(0,n.kt)("a",{parentName:"p",href:"https://twitter.com/prinOrange_"},"@PrinOrange_")," and ",(0,n.kt)("a",{parentName:"p",href:"https://weibo.com/u/1738014147"},"weibo"),". If you are interested in participating in this project, you can contact me first, and then I will invite your Github account to the Carbon Script project organization. Of course, if you have other ideas, you are also welcome to communicate with me."),(0,n.kt)("h2",{id:"repositories"},"Repositories"),(0,n.kt)("h3",{id:"vscode-language-support"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/CarbonScript/vscode-language-support"},"vscode-language-support")),(0,n.kt)("p",null,"The Carbon Script language support for Microsoft Visual Studio Code. It is a language plug -in in Microsoft Visual Studio Code, which provides support for language, such as code syntax color, grammar error, running configuration, and so on. "),(0,n.kt)("p",null,"This sub-project requires VSCode plugin development experience. You need to be proficient in the design, development, and debugging methods of the VSCode plugin. "),(0,n.kt)("p",null,"It also needs solid knowledge reserves, such as the design and writing of regex expression, the writing of grammar trees, TypeScript skills, and so on."),(0,n.kt)("h3",{id:"docs-carbonscript"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/CarbonScript/docs-carbonscript"},"docs-carbonscript")),(0,n.kt)("p",null,"Carbon Script Documentation Web Project. Generated using the docusaurus build. This site provides usage and detailed instructions for Carbon Script."),(0,n.kt)("p",null,"This is a documentation website project for the Carbon Script language. The purpose of this project is not only the front-end design of the document website, but also the specific content of the document. The Documentation website provides learning materials, guidance, and instructions for Carbon Script."),(0,n.kt)("p",null,"What you need to do is to follow our works, understand the progress of language and documentation in time, and timely feedback to the information on the document website, maintain the information of the document website, and correct the details of the document according to feedback."),(0,n.kt)("h3",{id:"complier"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/CarbonScript/compiler"},"complier")),(0,n.kt)("p",null,"The compiler is the core work content of this project. It is the implementation of language design. Taking Carbon Script as a source language and JavaScript as the target language. The final compilation product is the JavaScript file that can run on the Nodejs platform."),(0,n.kt)("p",null,"In addition to the compiler, this project also comes with a packing program. It packs the compiled JavaScript file into a Node package, which can run this program through the package management command."),(0,n.kt)("p",null,"The work of this sub-project is more difficult. It requires a very solid compilation principle knowledge, designing a parser, and realizing the compiler function. At present, the important task is to complete the compiler completely, and then add the optimization of the compiler."),(0,n.kt)("h3",{id:"target-minimizer"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/CarbonScript/target-minimizer"},"target-minimizer")),(0,n.kt)("p",null,"A tool for compressing the JavaScript source files generated by Carbon Script compilation is a part of the build tool."),(0,n.kt)("p",null,"It uses confusion technology to confuse and compress the compiled JavaScript code. The maximum possible reduction of the target size as an independent link in the construction tool. Its technology stack is nodejs + webpack."),(0,n.kt)("h3",{id:"carbland"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/CarbonScript/carbland"},"carbland")),(0,n.kt)("p",null,"It is developed based on three frameworks: Electron.js, React, MonacoEditor. Use it to write an independent development environment similar to VSCode, with grammar analysis, intelligent completion, grammar coloring, project management, and command line tools to make a cross -platform cross -platform Lightweight IDE."))}u.isMDXComponent=!0}}]);